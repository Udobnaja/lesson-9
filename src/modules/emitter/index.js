import {LinkedList} from './list';
import {EventMaps} from './map';

// –≤ —ç–º–∏—Ç—Ç–µ—Ä –º–æ–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å —Ä—É—á–∫—É, –º–æ–ª —Å –∫–∞–∫–∏–º —ç–º–∏—Ç—Ç–µ—Ä–æ–º –µ–≥–æ –∑–∞–ø—É—Å–∫–∞—Ç—å

export const emitter = {
    linkedEvents: new LinkedList(),
    events: new EventMaps(),
    on: function (event, handler) {
        this.events.add({event, handler});
        this.linkedEvents.add({event, handler});
    },
    off: function (event, handler) {

        const start = performance.now();
        this.events.remove({event, handler});
        const end = performance.now();

        const start1 = performance.now();
        this.linkedEvents.remove({event, handler});
        const end1 = performance.now();

        console.log(`
            üî• –£–¥–∞–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –∏–∑ –º–∞—Å—Å–∏–≤–∞ –∑–∞–Ω—è–ª–æ 
            ${(end - start).toFixed(2)} –º—Å –ø—Ä–æ—Ç–∏–≤ ${(end1 - start1).toFixed(2)} –º—Å`);
    },
    emit: function (event) {
        const start = performance.now();
        this.events.forEach(event);
        const end = performance.now();

        const start1 = performance.now();
        this.linkedEvents.forEach(event);
        const end1 = performance.now();

        console.log(`
            üõ† –í—ã–∑–æ–≤ –≤—Å–µ—Ö —ç–≤–µ–Ω—Ç–æ–≤ –∑–∞–Ω—è–ª 
               ${(end - start).toFixed(2)} –º—Å –ø—Ä–æ—Ç–∏–≤ ${(end1 - start1).toFixed(2)} –º—Å`);
    }
};
